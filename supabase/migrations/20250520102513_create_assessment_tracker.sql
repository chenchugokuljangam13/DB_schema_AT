CREATE TYPE programming_language AS ENUM ('Python', 'Node.js', 'React.js', 'Typescript', 'JavaScript');
CREATE TYPE status AS ENUM ('Pending', 'In-Progress', 'Submitted');
-- enum is good, if we want to add any values for the column it will be easy.
CREATE TABLE ASSESSMENTS (
    ID UUID PRIMARY KEY DEFAULT uuid_generate_v4 (),
    NAME TEXT NOT NULL,
    CREATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    IS_ARCHIVED BOOLEAN NOT NULL,
    REPO_LINK TEXT,
    HIDDEN_TEST_CASES_LINK TEXT,
    LANGUAGE programming_language,
    DESCRIPTION TEXT NOT NULL,
    META_DATA JSONB
);

CREATE TABLE CANDIDATES (
    ID UUID PRIMARY KEY DEFAULT uuid_generate_v4 (),
    NAME TEXT NOT NULL,
    EMAIL TEXT NOT NULL UNIQUE,
    CREATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    META_DATA JSONB
);

CREATE TABLE CANDIDATE_ASSESSMENT (
    ID UUID PRIMARY KEY DEFAULT uuid_generate_v4 (),
    CANDIDATE_ID uuid REFERENCES CANDIDATES (ID), -- FOREIGN KEY 
    ASSESSMENT_ID uuid REFERENCES ASSESSMENTS (ID), -- FOREIGN KEY
    GITHUB_USERNAME TEXT,
    INVITED_ON TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    STARTED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    SUBMITTED_AT TIMESTAMP WITH TIME ZONE,
    SHA TEXT,
    PR_NAME TEXT,
    CANDIDATE_REPO_LINK TEXT,
    STATUS status,
    RESULTS JSONB -- result-score, result-summary
);   


CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
   NEW.updated_at = now();
   RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_assessments_updated_at
BEFORE UPDATE ON assessments
FOR EACH ROW
EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_candidates_updated_at
BEFORE UPDATE ON candidates
FOR EACH ROW
EXECUTE FUNCTION update_updated_at_column();